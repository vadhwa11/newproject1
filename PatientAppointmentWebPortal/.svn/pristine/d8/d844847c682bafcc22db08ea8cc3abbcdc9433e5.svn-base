package com.asha.icgwebportal.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONObject;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.ui.Model;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.asha.icgwebportal.utils.RestUtils;
import com.asha.icgwebportal.vo.PatientDetails;

@RequestMapping("/appointment")
@RestController
@CrossOrigin
public class AppointmentWebController {


	@RequestMapping(value="/showappointmentsetup", method = RequestMethod.GET)
	public ModelAndView showRecordsForDoctorAppointment(HttpServletRequest request, HttpServletResponse response) {
		String data="";
		String jsp = "patientPersonalDetails";
		return new ModelAndView(jsp, "data", data);
	}
	
	//Get Patient Details by serviceId 
	@RequestMapping(value="/getServiceDetails", method = RequestMethod.POST)
	public String getServiceDetails(@RequestBody String data,HttpServletRequest request,
			HttpServletResponse response,Model model) {
		System.out.println("data : "+ data);
		JSONObject json = new JSONObject(data);
		MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,String>();
		model.addAttribute("serviceNo", json.get("serviceNo"));
		//return RestUtils.postWithHeaders("http://192.168.203.188:8080/AshaServices/registration/patients", requestHeaders, data); 
	    return RestUtils.postWithHeaders("http://localhost:8082/AshaServices/registration/patients", requestHeaders, data); 
		
		//return RestUtils.postWithHeaders("http://192.168.203.214:8085/AshaServices/registration/patients", requestHeaders, data); 
	}
	
	//Book Appointment
	
	@RequestMapping(value="/bookAppointment", method = RequestMethod.POST)
	public ModelAndView bookAppointment(@ModelAttribute("patientDetail") PatientDetails patientDetails1,@RequestBody String data,HttpServletRequest request,Model model,
			HttpServletResponse response) {
		String patientDetails=request.getParameter("patient");
		String serviceNo=request.getParameter("serviceNo");
		String[] patientDetailsArray = patientDetails.split(",");
		PatientDetails patientDetail=new PatientDetails();
		patientDetail.setServiceNo(serviceNo);
		patientDetail.setFullName(patientDetailsArray[0]);
		patientDetail.setRelation(patientDetailsArray[1]);
		patientDetail.setDateOfBirth(patientDetailsArray[2]);
		patientDetail.setAge(patientDetailsArray[3]);
		patientDetail.setGenderId(patientDetailsArray[4]);
		if(patientDetailsArray[4]=="1") 
			patientDetail.setGender("MALE");
		else
			patientDetail.setGender("FEMALE");
		patientDetail.setUhidNo(patientDetailsArray[5]);
		patientDetail.setEmpId(patientDetailsArray[6]);
		patientDetail.setRelationId(patientDetailsArray[7]);
		System.out.println("data id: "+patientDetails);
		MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,String>();
		/*
		 * String departmentList = RestUtils.postWithHeaders(
		 * "http://192.168.203.188:8080/AshaServices/appointment/recordsforAppointmentSetUp",
		 * requestHeaders, data);
		 */ 
	     String departmentList = RestUtils.postWithHeaders("http://localhost:8082/AshaServices/appointment/recordsforAppointmentSetUp", requestHeaders, data); 
		//String departmentList =RestUtils.postWithHeaders("http://192.168.203.214:8085/AshaServices/appointment/recordsforAppointmentSetUp", requestHeaders, data); 
		model.addAttribute("departmentList", departmentList);
		
		String hospitalList =RestUtils.postWithHeaders("http://192.168.203.141:8082/AshaServices/appointment/getHospitalList", requestHeaders, data); 
		model.addAttribute("hospitalList", hospitalList);
		
		return new ModelAndView("bookAppointment", "patientDetail", patientDetail);
	}
	
	//Get Appointment Type
	
	@RequestMapping(value="/getAppointmentType", method = RequestMethod.POST)
	public String getAppointmentType(@RequestBody String data,HttpServletRequest request,
			HttpServletResponse response) {
		System.out.println("data : "+ data);
		MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,String>();
		//return RestUtils.postWithHeaders(" http://192.168.203.188:8080/appointment/locationWiseAppointmentType", requestHeaders, data); 
		return RestUtils.postWithHeaders("http://localhost:8082/AshaServices/appointment/locationWiseAppointmentType", requestHeaders, data); 

		//return RestUtils.postWithHeaders("http://192.168.203.214:8085/AshaServices/appointment/locationWiseAppointmentType", requestHeaders, data);
	}
	
	//Get Appointment Tokens
	
		@RequestMapping(value="/getAppointmentTokens", method = RequestMethod.POST)
		public String getAppointmentTokens(@RequestBody String data,HttpServletRequest request,
				HttpServletResponse response) {
			System.out.println("data : "+ data);
			MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,String>();
		   return RestUtils.postWithHeaders("http://192.168.203.188:8080/AshaServices/registration/tokenNoForDepartmentMultiVisit", requestHeaders, data);
		   //return RestUtils.postWithHeaders("Localhost:8082/AshaService/registration/tokenNoForDepartmentMultiVisit", requestHeaders, data);
		   
		}
		
		//Submit Appointment
		
		@RequestMapping(value="/submitBookAppointment", method = RequestMethod.POST)
		public ModelAndView submitBookAppointment(@ModelAttribute("patientDetail") PatientDetails patientDetails,HttpServletRequest request,Model model,
				HttpServletResponse response) {
			String patientDetail=request.getParameter("patient");
			String serviceNo=request.getParameter("serviceNo");
			System.out.println("ser no"+patientDetails.getServiceNo());
			System.out.println("department"+patientDetails.getDepartment());
			System.out.println("appointment uhidNo"+patientDetails.getUhidNo());
			
			JSONObject json = new JSONObject(patientDetails);
			//JSONObject jsonObj = new JSONObject(patientDetails);
			
			MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,String>();
			
			String responseData = RestUtils.postWithHeaders("http://localhost:8082/AshaServices/appointment/createPatientAppointment", requestHeaders, json.toString()); 
			//String departmentList =RestUtils.postWithHeaders("http://192.168.203.214:8085/AshaServices/appointment/recordsforAppointmentSetUp", requestHeaders, data); 
			//model.addAttribute("departmentList", departmentList);
			System.out.println("appointment create data:----"+responseData);
			//return new ModelAndView("bookAppointment", "patientDetail", patientDetail);
			JSONObject responsedata = new JSONObject(responseData);
			model.addAttribute("message", "Appointment has been booked.");
			model.addAttribute("visitId",responsedata.get("visitId"));
			//...

			 return new ModelAndView("taketoken", "responseData", responseData);
}
		
		//get Appointment History
		@RequestMapping(value="/getAppointmentHistory", method = {RequestMethod.POST,RequestMethod.GET})
		public ModelAndView getAppointmentHistory(@ModelAttribute("patientDetail") PatientDetails patientDetails1,HttpServletRequest request,Model model,
				HttpServletResponse response) {
			String patientDetails=request.getParameter("patient");
			String serviceNo=request.getParameter("serviceNo");
			
			 patientDetails1.setServiceNo(serviceNo);
			
		/*
		 * String[] patientDetailsArray = patientDetails.split(","); PatientDetails
		 * patientDetail=new PatientDetails(); patientDetail.setServiceNo(serviceNo);
		 * patientDetail.setFullName(patientDetailsArray[0]);
		 * patientDetail.setRelation(patientDetailsArray[1]);
		 * patientDetail.setDateOfBirth(patientDetailsArray[2]);
		 * patientDetail.setAge(patientDetailsArray[3]);
		 * patientDetail.setGender(patientDetailsArray[4]);
		 * System.out.println("(appointment History): "+patientDetails1);
		 */
			JSONObject json = new JSONObject(patientDetails1);
		//	JSONObject json = new JSONObject(serviceNo.toString());
			//System.out.println("appointment history json create data:----"+json);
			MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,String>();
			
			String appointmentList =RestUtils.postWithHeaders("http://localhost:8082/AshaServices/appointment/getAppointmentHistory", requestHeaders, json.toString()); 
			System.out.println("appointment history json create data:----"+appointmentList);
			model.addAttribute("appointmentList", appointmentList);
			model.addAttribute("serviceNo", serviceNo);
			return new ModelAndView("appointmentHistory", "appointmentList", appointmentList);
		}
		
		@RequestMapping(value="/searchAppointment", method=RequestMethod.POST)
		public String addPhsiotherapy(@RequestBody String requestPayload, HttpServletRequest request, HttpServletResponse response) {
			String searchAppointmentResponse="";	
			JSONObject jsonObject = new JSONObject(requestPayload);
			MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String, String>();
			searchAppointmentResponse = RestUtils.postWithHeaders("http://localhost:8082/AshaServices/appointment/getAppointmentHistory", requestHeaders, jsonObject.toString());
			System.out.println("appointment history search data:----"+searchAppointmentResponse);
			
			return searchAppointmentResponse;
		}
		
		@RequestMapping(value = "/rescheduleAppointmentDataGet", method = RequestMethod.POST)
		public ResponseEntity<String> rescheduleAppointmentDataGet(@RequestBody String requestData) {
			System.out.println("requestDatasubmitPatientDetails:" + requestData);
			//String result = patientRegistrationService.submitPatientDetails(requestData);
			if (requestData.isEmpty()) {
				return new ResponseEntity<String>(HttpStatus.NO_CONTENT);
			}
			return new ResponseEntity<String>(requestData, HttpStatus.OK);
		}
		
		 @RequestMapping(value = "/rescheduleAppointment", method = RequestMethod.GET)
		  public ModelAndView rescheduleAppointment(@ModelAttribute("patientDetail") PatientDetails patientDetails,HttpServletRequest request, HttpServletResponse response) {
		  System.out.println("inside rescheduleAppointment"); 
		  String result= request.getParameter("appointmentData");
		  String[] data = result.split(",");
		  patientDetails.setVisitId(data[0]);
		  patientDetails.setServiceNo(data[1]);
		  patientDetails.setFullName(data[2]);
		  patientDetails.setDateOfBirth(data[3]);
		  patientDetails.setGender(data[4]);
		  patientDetails.setHospital(data[5]);
		  patientDetails.setDepartment(data[6]);
		  patientDetails.setHospitalId(data[7]);
		  patientDetails.setDepartmentId(data[8]);
		  patientDetails.setAppointmentType(data[9]);
		  patientDetails.setAppointmentId(data[10]);
		  patientDetails.setRelation(data[11]);
		  System.out.println("inside rescheduleAppointment"+result); 
		  String jsp = "rescheduleAppointment"; 
		  return new ModelAndView(jsp, "patientDetails", patientDetails); 
		  }
		 
		//Reschedule Appointment
			
			@RequestMapping(value="/submitRescheduleAppointment", method = RequestMethod.POST)
			public ModelAndView submitRescheduleAppointment(@ModelAttribute("patientDetail") PatientDetails patientDetails,@RequestBody String data,HttpServletRequest request,Model model,
					HttpServletResponse response) {
				String visitId=request.getParameter("visitId");
				String tokenNumber=request.getParameter("tokenNumber");
				String appointmentDate=request.getParameter("appointmentDate");
				String serviceNo=request.getParameter("serviceNo");
				System.out.println("appointmentDate"+appointmentDate);
				System.out.println("visitId"+visitId);
				System.out.println("tokenNumber"+tokenNumber);
				patientDetails.setVisitId(visitId);
				patientDetails.setTokenNumber(tokenNumber);
				patientDetails.setAppointmentDate(appointmentDate);
				JSONObject json = new JSONObject(patientDetails);
				MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,String>();
				
				String responseData = RestUtils.postWithHeaders("http://localhost:8082/AshaServices/appointment/reschedulePatientAppointment", requestHeaders, json.toString()); 
				System.out.println("appointment reschedule:----"+responseData);
				JSONObject responsedata = new JSONObject(responseData);
				model.addAttribute("message", "Appointment has been rescheduled.");
				//return "redirect:/getAppointmentHistory?serviceNo="+serviceNo;
				return new ModelAndView("rescheduleAppointment", "patientDetails", patientDetails);
			}
		
}


