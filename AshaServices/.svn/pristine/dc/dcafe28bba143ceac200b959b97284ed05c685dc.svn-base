package com.icg.jkt.entity;

import java.io.Serializable;
import javax.persistence.*;

import com.fasterxml.jackson.annotation.JsonBackReference;

import java.sql.Timestamp;
import java.util.List;


/**
 * The persistent class for the MAS_COMMANDTYPE database table.
 * 
 */
@Entity
@Table(name="MAS_COMMANDTYPE")
@NamedQuery(name="MasCommandType.findAll", query="SELECT m FROM MasCommandType m")
public class MasCommandType implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@SequenceGenerator(name="MAS_COMMANDTYPE_COMMANDTYPEID_GENERATOR", sequenceName="MAS_COMMANDTYPE_SEQ1", allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator="MAS_COMMANDTYPE_COMMANDTYPEID_GENERATOR")
	@Column(name="COMMANDTYPE_ID")
	private long commandtypeId;

	@Column(name="COMMANDTYPE_CODE")
	private String commandtypeCode;

	@Column(name="COMMANDTYPE_NAME")
	private String commandtypeName;

	@Column(name="LAST_CHG_DATE")
	private Timestamp lastChgDate;

	private String status;

	@OneToMany(mappedBy="masCommandType")
	@JsonBackReference
	private List<MasCommand> masCommands;

	@ManyToOne
	@JoinColumn(name="LAST_CHG_BY")
	private Users user;

	public MasCommandType() {
	}

	public long getCommandtypeId() {
		return this.commandtypeId;
	}

	public void setCommandtypeId(long commandtypeId) {
		this.commandtypeId = commandtypeId;
	}

	public String getCommandtypeCode() {
		return this.commandtypeCode;
	}

	public void setCommandtypeCode(String commandtypeCode) {
		this.commandtypeCode = commandtypeCode;
	}

	public String getCommandtypeName() {
		return this.commandtypeName;
	}

	public void setCommandtypeName(String commandtypeName) {
		this.commandtypeName = commandtypeName;
	}

	public Timestamp getLastChgDate() {
		return this.lastChgDate;
	}

	public void setLastChgDate(Timestamp lastChgDate) {
		this.lastChgDate = lastChgDate;
	}

	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public List<MasCommand> getMasCommands() {
		return this.masCommands;
	}

	public void setMasCommands(List<MasCommand> masCommands) {
		this.masCommands = masCommands;
	}

	public MasCommand addMasCommand(MasCommand masCommand) {
		getMasCommands().add(masCommand);
		masCommand.setMasCommandType(this);

		return masCommand;
	}

	public MasCommand removeMasCommand(MasCommand masCommand) {
		getMasCommands().remove(masCommand);
		masCommand.setMasCommandType(null);

		return masCommand;
	}

	public Users getUser() {
		return this.user;
	}

	public void setUser(Users user) {
		this.user = user;
	}

}