package com.icg.jkt.dao;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONObject;
import org.springframework.stereotype.Repository;

import com.icg.jkt.entity.MasAdministrativeSex;
import com.icg.jkt.entity.MasAppointmentType;
import com.icg.jkt.entity.MasBloodGroup;
import com.icg.jkt.entity.MasCommand;
import com.icg.jkt.entity.MasCommandType;
import com.icg.jkt.entity.MasDepartment;
import com.icg.jkt.entity.MasDepartmentType;
import com.icg.jkt.entity.MasDisposal;
import com.icg.jkt.entity.MasEmpanelledHospital;
import com.icg.jkt.entity.MasEmployee;
import com.icg.jkt.entity.MasEmployeeCategory;
import com.icg.jkt.entity.MasFrequency;
import com.icg.jkt.entity.MasHospital;
import com.icg.jkt.entity.MasIcd;
import com.icg.jkt.entity.MasIdealWeight;
import com.icg.jkt.entity.MasMaritalStatus;
import com.icg.jkt.entity.MasMedicalCategory;
import com.icg.jkt.entity.MasRank;
import com.icg.jkt.entity.MasRelation;
import com.icg.jkt.entity.MasReligion;
import com.icg.jkt.entity.MasSample;
import com.icg.jkt.entity.MasServiceType;
import com.icg.jkt.entity.MasState;
import com.icg.jkt.entity.MasStoreUnit;
import com.icg.jkt.entity.MasTrade;
import com.icg.jkt.entity.MasUOM;
import com.icg.jkt.entity.MasUnit;
import com.icg.jkt.entity.MasUnitType;

@Repository
public interface MasterDao {

	List<MasDepartment> getDepartmentList();

	MasEmployee checkEmp(Long i);
	List<MasIcd> getIcd();	
	Map<String, List<MasState>>  getAllStates(JSONObject jsonObject);	
	MasState checkMasState(String stateCode);
	/*********************************MAS COMMAND**************************************************/
	List<MasCommand> validateMasCommand(String cmdCode, String cmdName);
	String addMasCommand(MasCommand masCommand);
	MasCommand chkCommand(String  cmdName);
	/*List<MasCommand> getAllCommand(JSONObject jsonObj);*/	
	Map<String, List<MasCommand>> getAllCommand(JSONObject jsonObj);
	List<MasCommand> getCommand(String cmdName);	
	String updateCommand(Long cmdId, String cmdCode, String cmdName, Long commandTypeId);
	String updateCommandStatus(Long cmdId, String cmdCode,String status);
	List<MasCommandType> getCommandTypeList();
	String addTradeDetails(MasTrade masTrade);
//	/***************************MAS UOM******************************************/
//	List<MasUOM> validateMasUOM(String UOMCode, String UOMName);
//	String addMasUOM(MasUOM masUnit);
//	Map<String,List<MasUOM>> getAllUOM(JSONObject jsonObject);
//	String updateUOMDetails(Long UOMId, String UOMCode,String UOMName);
//	
//	MasUOM chkMasUnit(String UOMCode);
//	String updateUOMStatus(Long UOMId, String UOMCode,String UOMStatus);
//	
	/*************************MAS UNIT************************************/
	Map<String, List<MasUnit>> getAllUnit(JSONObject jsondata);
	List<MasCommand> getCommandList();
	List<MasUnit> validateUnit(String unitName);
	String addMasUnit(MasUnit masUnit);
	List<MasUnitType> getUnitTypeList();
	String updateUnit(Long uId, String uName, Long commandId, String unitAddress, Long uTypeId);
	MasUnit checkUnit(String unitName);
	String updateUnitStatus(Long uId, String uName,String status);
	
	/*******************************MAS HOSPITAL**********************************************/
	List<MasUnit> getUnitNameList();
	Map<String, List<MasHospital>> getAllHospital(JSONObject jsondata);
	MasHospital checkMasHospital(String hospitalCode);
	String updateHospitalMasterStatus(Long hospitalId, String hospitalCode, String status);
	String updateHospitalDetails(Long hospitalId, String hospitalCode, String hospitalName, Long unitId);
	List<MasHospital> validateMasHospital(String hospitalCode, String hospitalName);
	String addMasHospital(MasHospital hospital);
	
	/********************************MAS RELATION**********************************************************/
	Map<String, List<MasRelation>> getAllRelation(JSONObject jsonObject);
	String updateRelationDetails(Long relationId, Long relationCode, String relationName, Long newRelationCode, String newRelationName);
	MasRelation checkMasRelation(Long relationCode);
	String updateRelationStatus(Long realtionId, Long relationCode, String status);
	List<MasRelation> validateRelation(Long relationCode, String relationName);
	String addRelation(MasRelation masRelation);
	
	/********************************MAS DISPOSAL**************************************************************/
	List<MasDisposal> validateDisposal(String disposalCode, String disposalName);
	String addDisposal(MasDisposal masDisposal);
	Map<String, List<MasDisposal>> getAllDisposal(JSONObject jsonObject);
	String updateDisposalDetails(Long disposalId,String disposalCode, String disposalName, String disposalType);
	MasDisposal checkMasDisposal(String disposalCode);
	String updateDisposalStatus(Long disposalId,String disposalCode, String status);
	
	/**********************************MAS APPOINTMENT TYPE********************************************************************/
	List<MasAppointmentType> validateAppointmentType(String appointmentTypeCode, String appointmentTypeName);
	String addAppointmentType(MasAppointmentType masAppointmentType);
	Map<String, List<MasAppointmentType>> getAllAppointmentType(JSONObject jsonObject);
	String updateAppointmentTypeDetails(Long appointmentTypeId, String appointmentTypeCode, String appointmentTypeName);
	MasAppointmentType checkMasAppointmentType(String appointmentTypeCode);
	String updateAppointmentTypeStatus(Long appointmentTypeId, String appointmentTypeCode, String status);
	
	
	
	/**********************************MAS DEPARTMENT****************************************************************/
	List<MasDepartmentType> getDepartmentTypeList();
	Map<String, List<MasDepartment>> getAllDepartment(JSONObject jsonObject);
	String addDepartment(MasDepartment masDepartment);
	List<MasDepartment> validateDepartment(String departmentCode, String departmentName);
	MasDepartment checkDepartment(String departmentCode);
	String updateDepartmentStatus(Long departmentId, String departmentCode, String status);
	String updateDepartmentDetails(Long departmentId, String departmentCode, String departmentName, Long departmentTypeId);
	
	/********************************MAS FREQUENCY*********************************************************/
	Map<String, List<MasFrequency>> getAllOpdFrequency(JSONObject jsonObject);
	List<MasFrequency> validateFrequency(String frequencyCode, String frequencyName);
	String addOpdFrequency(MasFrequency masFrequency);
	String updateDepartmentDetails(Long frequencyId, String frequencyCode, String frequencyName);
	MasFrequency checkFrequency(String frequencyCode);
	String updateOpdFrequencyStatus(Long frequencyId, String frequencyCode, String status);
	
	/*******************************MAS EMPANELLED HOSPITAL*************************************/
	Map<String, List<MasEmpanelledHospital>> getAllEmpanelledHospital(JSONObject jsonObject);
	List<MasEmpanelledHospital> validateEmpanelledHospital(String empanelledHospitalName);
	String addImpanneledHospital1(MasEmpanelledHospital masEmpanelledHospital);
	String addEmpanelledHospital(MasEmpanelledHospital masEmpanelledHospital);
	String updateEmpanelledHospital(JSONObject jsonObject);
	
	/******************************* MAS IDEAL WEIGHT **************************************************/
	Map<String , List<MasIdealWeight>> getAllIdealWeight(JSONObject jsonObject);

	/*************************MAS RANK************************************/
	List<MasRank> validateMasRank(String rankCode, String rankName);
	String addMasRank(MasRank masRank);
	MasRank chkRank(String  rankName);
	Map<String, List<MasRank>> getAllRank(JSONObject jsonObj);
	List<MasRank> getRank(String rankName);	
	String updateRank(Long rankId, String rankCode, String rankName, Long employeeCategoryId);
	String updateRankStatus(Long rankId, String rankCode,String status);
	List<MasEmployeeCategory> getEmployeeCategoryList();
	
	/************************** TRADE MASTER ****************************/
	List<MasTrade> validateMasTrade(String tradeName);
	String addMasTrade(MasTrade masTrade);
	MasTrade checkTrade(String  tradeName);
	Map<String, List<MasTrade>> getAllTrade(JSONObject jsonObj);
	List<MasTrade> getTrade(String tradeName);	
	String updateTrade(Long tradeId,String tradeName, Long serviceTypeId);
	String updateTradeStatus(Long tradeId,String status);
	List<MasServiceType> getServiceTypeList();
	
	/********************************MAS RELIGION*********************************************************/
	Map<String, List<MasReligion>> getAllReligion(JSONObject jsonObject);
	List<MasReligion> validateReligion(String religionCode, String religionName);
	String addReligion(MasReligion masReligion);
	String updateReligionDetails(Long religionId, String religionCode, String religionName);
	MasReligion checkReligion(String religionCode);
	String updateReligionStatus(Long religionId, String religionCode, String status);
	
	/********************************MAS MARITAL STATUS*********************************************************/
	Map<String, List<MasMaritalStatus>> getAllMaritalStatus(JSONObject jsonObject);
	List<MasMaritalStatus> validateMaritalStatus(String maritalStatusCode, String maritalStatusName);
	String addMaritalStatus(MasMaritalStatus masMaritalStatus);
	String updateMaritalStatusDetails(Long maritalStatusId, String maritalStatusCode, String maritalStatusName);
	MasMaritalStatus checkMaritalStatus(String maritalStatusCode);
	String updateMaritalStatusStatus(Long maritalStatusId, String maritalStatusCode, String status);
	
	/********************************MAS EMPLOYEE CATEGORY*********************************************************/
	Map<String, List<MasEmployeeCategory>> getAllEmployeeCategory(JSONObject jsonObject);
	List<MasEmployeeCategory> validateEmployeeCategory(Long employeeCategoryCode, String employeeCategoryName);
	String addEmployeeCategory(MasEmployeeCategory masEmployeeCategory);
	String updateEmployeeCategoryDetails(Long employeeCategoryId, String employeeCategoryCode, String employeeCategoryName);
	MasEmployeeCategory checkEmployeeCategory(String employeeCategoryCode);
	String updateEmployeeCategoryStatus(Long employeeCategoryId, String employeeCategoryCode, String status);
	
	/********************************MAS Administrative Sex*********************************************************/
	Map<String, List<MasAdministrativeSex>> getAllAdministrativeSex(JSONObject jsonObject);
	List<MasAdministrativeSex> validateAdministrativeSex(String AdministrativeSexCode, String AdministrativeSexName);
	String addAdministrativeSex(MasAdministrativeSex masAdministrativeSex);
	String updateAdministrativeSexDetails(Long administrativeSexId, String administrativeSexCode, String administrativeSexName);
	MasAdministrativeSex checkAdministrativeSex(String administrativeSexCode);
	String updateAdministrativeSexStatus(Long administrativeSexId, String administrativeSexCode, String status);
	
	/********************************MAS Medical Category*********************************************************/
	Map<String, List<MasMedicalCategory>> getAllMedicalCategory(JSONObject jsonObject);
	List<MasMedicalCategory> validateMedicalCategory(Long MedicalCategoryCode, String MedicalCategoryName);
	String addMedicalCategory(MasMedicalCategory masMedicalCategory);
	String updateMedicalCategoryDetails(Long medicalCategoryId, Long medicalCategoryCode, String medicalCategoryName);
	MasMedicalCategory checkMedicalCategory(Long medicalCategoryCode);
	String updateMedicalCategoryStatus(Long medicalCategoryId, Long medicalCategoryCode, String status);
	
	/********************************MAS Blood Group*********************************************************/
	Map<String, List<MasBloodGroup>> getAllBloodGroup(JSONObject jsonObject);
	List<MasBloodGroup> validateBloodGroup(String BloodGroupCode, String BloodGroupName);
	String addBloodGroup(MasBloodGroup masBloodGroup);
	String updateBloodGroupDetails(Long bloodGroupId, String bloodGroupCode, String bloodGroupName);
	MasBloodGroup checkBloodGroup(String bloodGroupCode);
	String updateBloodGroupStatus(Long bloodGroupId, String bloodGroupCode, String status);

	/********************************MAS Sample*********************************************************/
	Map<String, List<MasSample>> getAllSample(JSONObject jsonObject);
	List<MasSample> validateSample(String sampleCode, String sampleDescription);
	String addSample(MasSample masSample);
	String updateSampleDetails(Long sampleId, String sampleCode, String sampleDescription);
	MasSample checkSample(String sampleyCode);
	String updateSampleStatus(Long sampleId, String sampleCode, String status);
	
	/********************************MAS UOM*********************************************************/
	Map<String, List<MasUOM>> getAllUOM(JSONObject jsonObject);
	List<MasUOM> validateUOM(String UOMCode, String UOMName);
	String addUOM(MasUOM masUOM);
	String updateUOMDetails(Long UOMId, String UOMCode, String UOMName);
	MasUOM checkUOM(String UOMCode);
	String updateUOMStatus(Long UOMId, String UOMCode, String status);
	
	/******************************* MAS SERVICE TYPE **************************************************/
	Map<String, List<MasServiceType>> getAllServiceType(JSONObject jsonObj);
	String updateServiceType(Long serviceTypeId, String serviceTypeName);
	String addServiceType(MasServiceType masServiceType);
	String updateServiceTypeStatus(Long serviceTypeId, String commandCode, String status);
	
	/********************************MAS Item Unit*********************************************************/
	Map<String, List<MasStoreUnit>> getAllItemUnit(JSONObject jsonObject);
	List<MasStoreUnit> validateItemUnit(String storeUnitName);
	String addItemUnit(MasStoreUnit masStoreUnit);
	String updateItemUnitDetails(Long storeUnitId, String storeUnitName);
	MasStoreUnit checkItemUnit(String storeUnitName);
	String updateItemUnitStatus(Long storeUnitId, String storeUnitName ,String status);
	
}
