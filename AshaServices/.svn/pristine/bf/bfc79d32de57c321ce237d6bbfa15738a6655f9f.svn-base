package com.icg.jkt.controller;

/** Copyright 2019 JK Technosoft Ltd. All rights reserved.
* Use is subject to license terms.
* Purpose of the Asha-ICG -  This is for login.
* @author  Krishna Thakur
* Create Date: 14/01/2019 
* @version 0.1
*/

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.icg.jkt.service.LoginService;
import com.icg.jkt.service.OpdService;
import com.icg.jkt.service.impl.OpdServiceImpl;
import com.icg.jkt.utils.RequestConstants;


@RequestMapping("/v0.1/opd")
@RestController
@CrossOrigin

public class OpdController {
	
	@Autowired
	OpdService os;
	
	@Autowired
	OpdServiceImpl osl;
	
	Map<String, Object> map = new HashMap<String, Object>();
	
	////////////////// Get Waiting Patient List for Pre-Consultation Assessment /////////////////////////////
	
	@RequestMapping(value="/getPreConsPatientWatingList", method = RequestMethod.POST,produces="application/json",consumes="application/json")
	public String PreConsPatientWatingList(@RequestBody HashMap<String, Object> jsondata, HttpServletRequest request,
			HttpServletResponse response)
	{
		return os.PreConsPatientWatingList(jsondata, request, response);
	}
	
	
	
	///////////////////Insert Pre-Consultation Assessment /////////////////////////
	
	@RequestMapping(value="/addVitalDetails", method = RequestMethod.POST,produces="application/json",consumes="application/json")
	public String addVitalPreConsulataionDetails(@RequestBody HashMap<String, Object> payload, HttpServletRequest request,
			HttpServletResponse response) {
		return os.addVitalPreConsulataionDetails(payload, request, response);
	}
	
	
	
	
	
	//////////////////// cpoy from HAL project---Get Waiting Patient List for OPD ///////////////////////////////
	
	@RequestMapping(value="/showWaitingList", method = RequestMethod.POST,produces="application/json",consumes="application/json")
	public ResponseEntity<Object> getWaitingPatientList(@RequestBody String payload,HttpServletRequest request,HttpServletResponse httpServletResponse) {
		int deptId = 0;
		HttpSession session = request.getSession();
		Map<String, Object> mapForDS = new HashMap<String, Object>();
		@SuppressWarnings("unused")
		int hospitalId = (Integer) session.getAttribute(RequestConstants.HOSPITAL_ID);
		mapForDS.put("hospitalId", hospitalId);
		String serviceNo = "";
		int docId=0;
		if (request.getParameter("doctorId") != null) {
			docId = Integer.parseInt(request.getParameter("doctorId"));
			mapForDS.put("empId", docId);
		}
		if (request.getParameter(RequestConstants.SESSION_ID) != null) {
		
			mapForDS.put(RequestConstants.SESSION_ID, Integer.parseInt(request.getParameter(RequestConstants.SESSION_ID)));
		}
		if (docId == 0){
			docId = (Integer) session.getAttribute("empId");
			mapForDS.put("empId", docId);
			
		}
		if (request.getParameter("serviceNo") != null) {
			serviceNo = request.getParameter("serviceNo");
			mapForDS.put("serviceNo", serviceNo);
		}
		if (request.getParameter(RequestConstants.PATIENT_NAME) != null) {
			mapForDS.put(RequestConstants.PATIENT_NAME, request.getParameter(RequestConstants.PATIENT_NAME));
		}
		if (request.getParameter("deptId") != null) {
			deptId = Integer.parseInt(request.getParameter("deptId"));
			mapForDS.put("deptId", deptId);
		} else {
			deptId = (Integer) session.getAttribute("deptId");
			mapForDS.put("deptId", deptId);
		}
		String title = request.getParameter("title");
		map = osl.getWaitingPatientList(mapForDS);
		if (session.getAttribute("deptName") != null) {
			map.put("deptName", (String) session.getAttribute("deptName"));
		}
		map.put("docId", docId);
		return new ResponseEntity<>(map,HttpStatus.ACCEPTED);//os.getWaitingPatientList(map,HttpStatus.ACCEPTED);
	}
	
	@RequestMapping(value="/getObesityWaitingList", method = RequestMethod.POST,produces="application/json",consumes="application/json")
	public String  getObesityWaitingList(@RequestBody HashMap<String, Object> map){		
		
		String resultMap = os.getObesityWaitingList(map);
		
		return resultMap;
		
	}
	
	@RequestMapping(value="/getObesityDetails", method = RequestMethod.POST,produces="application/json",consumes="application/json")
	public String  getObesityDetails(@RequestBody HashMap<String, Object> map){		
		
		String resultMap = os.getObesityDetails(map);
		System.out.println("resultMap "+resultMap);
		return resultMap;
		
	}
	
	@RequestMapping(value="/getIdealWeight", method = RequestMethod.POST,produces="application/json",consumes="application/json")
	public String getIdealWeight(@RequestBody HashMap<String, String> map, HttpServletRequest request, HttpServletResponse response) {
		String idealWeight = os.idealWeight(map, request, response);
		System.out.println("idealWeight "+idealWeight);
		return idealWeight;
	}
	
	@RequestMapping(value="/saveObesityDetails", method = RequestMethod.POST,produces="application/json",consumes="application/json")
	public String saveObesityDetails(@RequestBody HashMap<String, Object> map, HttpServletRequest request, HttpServletResponse response) {
		String idealWeight = os.saveObesityDetails(map);
		return idealWeight;  
	}

}








