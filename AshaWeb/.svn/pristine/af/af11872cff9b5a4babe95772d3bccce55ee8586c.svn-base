package com.asha.icgweb.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.pool2.impl.AbandonedConfig;
import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.asha.icgweb.service.OpdService;
import com.asha.icgweb.utils.Box;
import com.asha.icgweb.utils.HMSUtil;
import com.asha.icgweb.utils.RestUtils;

@RequestMapping("/v0.1/opd")
@RestController
@CrossOrigin
public class OpdController  {
	
	@Autowired
	OpdService os;

	String ipAndPort = HMSUtil.getProperties("urlextension.properties", "OSB_IP_AND_PORT");
	String local_dhiraj = HMSUtil.getProperties("urlextension.properties", "local_dhiraj");
	
	@RequestMapping(value="/getPreConsPatientWatingWeb", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String preConsPatientWatingWeb(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.preConsPatientWatingWeb(payload, request, response);
	}
	
	@RequestMapping(value = "/preOpdWaitingList", method = RequestMethod.GET)
	public ModelAndView preOpdWaitingList(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("pre waiting called");
		String jsp = "opdPreConsulation";
		ModelAndView mv =new ModelAndView();
		mv.setViewName(jsp);
		return mv;
	}
	
	@RequestMapping(value = "/addVitalRecords", method = RequestMethod.GET)
	public ModelAndView addVitalRecord(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("called");
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "addVitalPreConsultant";
		int visitId= Integer.parseInt(request.getParameter("visitId"));
		String payload = "{\"visitId\":"+visitId+"}";
		String jsonResponse = os.getOpdPatientDetailModel(payload, request, response);
		System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
		
	}
	
	@RequestMapping(value="/saveVitailsPatientdetails", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String saveVitailsPatientdetails(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.saveVitailsPatientdetails(payload, request, response);
	}
	
	@RequestMapping(value="/getIdealWeight", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getIdealWeight(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getIdealWeight(payload, request, response);
	}
	
	@RequestMapping(value="/getOpdWaitingList", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getOpdWaitingList(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getOpdWaitingList(payload, request, response);
	}
	
/*	@RequestMapping(value="/getOpdPatientDetails", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getOpdPatinetDetails(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getOpdPatinetDetails(payload, request, response);
	}*/
	
	@RequestMapping(value = "/getOpdPatientModel", method = RequestMethod.GET)
	public ModelAndView getOpdPatientModel(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("called");
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "opdMain";
		int visitId= Integer.parseInt(request.getParameter("visitId"));
		String payload = "{\"visitId\":"+visitId+"}";
		String jsonResponse = os.getOpdPatientDetailModel(payload, request, response);
		System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}
	
	
	@RequestMapping(value="/getIcdList", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getIcdList(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getIcdList(payload, request, response);
	}
	
	@RequestMapping(value = "/getFamilyPatinetHistory", method = RequestMethod.GET)
	public ModelAndView getFamilyPatientHistory(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("called");
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "temp_presentCompalint";
		
		int empid= Integer.parseInt(request.getParameter("employeeId"));
		String payload = "{\"employeeId\":"+empid+"}";
		String jsonResponse = os.getFamilyPatientHistory(payload, request, response);
		System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}
	
@RequestMapping(value="/saveOpdPatientdetails", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String saveOpdPatientdetails(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		System.out.println("data : " +payload );
		//Box box= HMSUtil.getBox(request);
		
		//JSONObject obj = new JSONObject(box);
		//System.out.println("jsonreq"+obj);
		
		
		return os.saveOpdPatientdetails(payload, request, response);
	}

	@RequestMapping(value = "/opdSubmit", method = RequestMethod.GET)
	public ModelAndView submitOpdPatientdetails(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("OPD Data Submited Sucessufully");
		String jsp = "opdSubmit";
		int visitId= Integer.parseInt(request.getParameter("visitId"));
		String payload = "{\"visitId\":"+visitId+"}";
		String jsonResponse = os.getOpdPatientDetailModel(payload, request, response);
		System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}
	
	@RequestMapping(value = "/opdWaitingList", method = RequestMethod.GET)
	public ModelAndView opdWaitingList(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("waiting called");
		String jsp = "opdWaitingList";
		//String jsonResponse = os.saveOpdPatientdetails(payload, request, response);
		////System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		//mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}
	
	@RequestMapping(value = "/showCreateInvestigationTemplate", method = RequestMethod.GET)
	public ModelAndView showCreateInvestigationTemplate(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("called");
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "opdInvestigationTemplate";
		int empid= Integer.parseInt(request.getParameter("employeeId"));
		String payload = "{\"employeeId\":"+empid+"}";
		String jsonResponse = os.getFamilyPatientHistory(payload, request, response);
		System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}
	
	@RequestMapping(value="/getOpdPreviousVisitRecord", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getOpdPreviousVisitRecord(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getOpdPreviousVisitRecord(payload, request, response);
	}
	
	@RequestMapping(value = "/showPreveiousVisit", method = RequestMethod.GET)
	public ModelAndView showPreveiousVisit(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("called");
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "opdPreveiousVisit";
		int patientId= Integer.parseInt(request.getParameter("patientId"));
		String payload = "{\"patientId\":"+patientId+"}";
		String jsonResponse = os.getFamilyPatientHistory(payload, request, response);
		System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}
	
	@RequestMapping(value = "/showEHRRecords", method = RequestMethod.GET)
	public ModelAndView showEHRRecords(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("called");
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "patientSummary";
		int patientId= Integer.parseInt(request.getParameter("patientId"));
		String payload = "{\"patientId\":"+patientId+"}";
		String jsonResponse = os.getFamilyPatientHistory(payload, request, response);
		System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}
	
	@RequestMapping(value = "/showUpdateInvestigationTemplate", method = RequestMethod.GET)
	public ModelAndView updateCreateInvestigationTemplate(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("called");
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "updateInvestigationTemplate";
		int empid= Integer.parseInt(request.getParameter("employeeId"));
		String payload = "{\"employeeId\":"+empid+"}";
		String jsonResponse = os.getFamilyPatientHistory(payload, request, response);
		System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}
	
	@RequestMapping(value="/saveOpdInvestigationTemplates", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String saveOpdInvestigationTemplates(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		System.out.println("data : " +payload );
		return os.saveOpdInvestigationTemplates(payload, request, response);
	}
	
	
	@RequestMapping(value="/getIinvestigationList", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getIinvestigationList(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getIinvestigationList(payload, request, response);
	}
	
	@RequestMapping(value="/getMasDisposalList", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getMasDisposalList(@RequestBody String payload,HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getMasDisposalList(payload,request, response);
	}
	
	@RequestMapping(value = "/createTreatmentTemplate", method = RequestMethod.GET)
	public ModelAndView createTreatmentTemplate(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("called");
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "prescriptionTemplate";
		int empid= Integer.parseInt(request.getParameter("employeeId"));
		String payload = "{\"employeeId\":"+empid+"}";
		String jsonResponse = os.getFamilyPatientHistory(payload, request, response);
		System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}
	
	@RequestMapping(value="/saveTreatmentOpdTemplates", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String saveTreatmentOpdTemplates(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		System.out.println("data : " +payload );
		return os.saveTreatmentOpdTemplates(payload, request, response);
	}
	
	@RequestMapping(value="/getMasStoreItemList", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getMasStoreItemList(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getMasStoreItemList(payload, request, response);
	}
	
	@RequestMapping(value="/getMasFrequency", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getMasFrequency(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getMasFrequency(payload, request, response);
	}
	
	@RequestMapping(value="/getMasNursingCare", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getMasNursingCare(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		System.out.println("Nursing Care Called");
		return os.getMasNursingCare(payload, request, response);
	}
	
	@RequestMapping(value="/getTemplateName", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getTemplateName(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getTemplateName(payload, request, response);
	}
	
	@RequestMapping(value="/getEmpanelledHospital", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getEmpanelledHospital(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getEmpanelledHospital(payload, request, response);
	}
	
	@RequestMapping(value = "/opdPrescriptionReports", method = RequestMethod.GET)
	public ModelAndView opdPrescriptionReports(HttpServletRequest request,	HttpServletResponse response) {
		System.out.println("Reports called");
		String jsp = "opdReports";
		//String jsonResponse = os.saveOpdPatientdetails(payload, request, response);
		////System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		//mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}
	
	@RequestMapping(value="/getTemplateInvestigation", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getTemplateInvestigation(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getTemplateInvestigation(payload, request, response);
	}
	
	@RequestMapping(value="/getTemplateTreatment", method = RequestMethod.POST)
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	public String getTemplateTreatment(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {	
		
		return os.getTemplateTreatment(payload, request, response);
	}
	
	
	 //HashMap<String,String> listMap =  new HashMap<String,String>();
	@RequestMapping(value = "/getCaseSheet", method = RequestMethod.GET)
	public ModelAndView getCaseSheet(HttpServletRequest request,	HttpServletResponse response) {

		System.out.println("Case Sheet Method called");
		Map<String, Object> map = new HashMap<String, Object>();
		//String jsp = "opdMain";
		int visitId= Integer.parseInt(request.getParameter("visitId"));
		String payload = "{\"visitId\":"+visitId+"}";
		String jsonResponse = os.getOpdPatientDetailModel(payload, request, response);
		System.out.println("jsonResponse "+jsonResponse);
		ModelAndView mv =new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.addObject("msgCaseSheet", "Case Sheet VisitId.");
		//mv.setViewName(jsp);
		return mv;
	}

	
	@RequestMapping(value="/show",method=RequestMethod.POST)
	public ResponseEntity<Object> showRegistrationJsp(@RequestBody String payload,HttpServletRequest request,HttpServletResponse httpServletResponse) {
   
		
		Map<String, Object> map = new HashMap<String, Object>();
		
		map.put("departmentName", "GENERAL MEDICINE");
		map.put( "employeeName", "krishna" );
		map.put( "patientName", "Rahul" );
		map.put( "gender", "male" );
		map.put( "visitId", 2 );
		map.put( "patientId", 1234 );
		map.put( "tokenNo", 22 );
		map.put( "priority", 3);
		map.put( "doctorname", "Thakur" );
		map.put( "age", 30 );
		map.put( "status", "w" );
		//list.add(map)
		return new ResponseEntity<>(map,HttpStatus.ACCEPTED);
	}

	@RequestMapping(value = "/obesityWaitingJsp", method = RequestMethod.GET)
	public ModelAndView obesityWaitingLJsp() {
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "obesityWaitingList";
		ModelAndView mv = new ModelAndView();
		mv.setViewName(jsp);
		return mv;
	}

	@RequestMapping(value = "/obesityWaitingList", method = RequestMethod.POST)
	public String obesityWaitingList(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		String result = os.obesityWaitingList(payload);
		return result;
	}

	@RequestMapping(value = "/patientObesityDetailjsp", method = RequestMethod.GET)
	public ModelAndView patientObesityDetailjsp(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "patientObesityDetail";
		int id = Integer.parseInt(request.getParameter("Id"));
		String payload = "{\"id\":" + id + "}";
		String jsonResponse = os.getObesityDetail(payload, request, response);
		ModelAndView mv = new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}

	@RequestMapping(value = "/saveObesityDetails", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
	public String saveObesityDetails(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "saveObesityDetail");
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/saveObesityDetails",requestHeaders, payload);
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		return data;
	}

	@RequestMapping(value = "/referralWaitingList", method = RequestMethod.GET)
	public ModelAndView referralWaitingJsp() {
		System.out.println("inside referralWaitingJsp");
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "referralWaitingList";
		ModelAndView mv = new ModelAndView();
		mv.setViewName(jsp);
		return mv;
	}

	@RequestMapping(value = "/referredPatientList", method = RequestMethod.POST)
	public String referredPatientList(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "referralWaitingList");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/referredPatientList",requestHeaders, payload);
		return data;
	}

	@RequestMapping(value = "/referredPatientDetail", method = RequestMethod.GET)
	public ModelAndView referredPatientDetail(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "referredPatientDetail";
		int id = Integer.parseInt(request.getParameter("Id"));
		String payload = "{\"id\":" + id + "}";
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "referralDetailList");
		String jsonResponse = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		//String jsonResponse = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/referredPatientDetail",requestHeaders, payload);
		ModelAndView mv = new ModelAndView();
		mv.addObject("data", jsonResponse);
		mv.setViewName(jsp);
		return mv;
	}

	@RequestMapping(value = "/updateReferralDetail", method = RequestMethod.POST)
	public String updateReferralDetail(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "updateReferralDetail");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/updateReferralDetail",requestHeaders, payload);
		return data;
	}

	@RequestMapping(value = "/admissionPending", method = RequestMethod.GET)
	public ModelAndView getAdmissionDischargeList() {
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "admissionPending";
		ModelAndView mv = new ModelAndView();
		mv.setViewName(jsp);
		return mv;
	}

	@RequestMapping(value = "/getAdmissionPendingList", method = RequestMethod.POST)
	public String getAdmissionDischargeList(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "getAdmissionDischargeList");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/getAdmissionDischargeList",requestHeaders, payload);

		return data;
	}

	@RequestMapping(value = "/dischargePending", method = RequestMethod.GET)
	public ModelAndView getDischargePending() {
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "getDischargePending";
		ModelAndView mv = new ModelAndView();
		mv.setViewName(jsp);
		return mv;
	}

	@RequestMapping(value = "/getDischargePendingList", method = RequestMethod.POST)
	public String getDischargePendingList(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		// getPendingDischargeList
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "getPendingDischargeList");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
	    //String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/getPendingDischargeList",requestHeaders, payload);

		return data;
	}

	@RequestMapping(value = "/admission", method = RequestMethod.GET)
	public ModelAndView admission(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "admission";
		String id = request.getParameter("id");
		String payload = "{\"id\":" + id + "}";
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "admissionAndDischarge");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
	    //String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/admissionAndDischarge",requestHeaders, payload);
		ModelAndView mv = new ModelAndView();
		mv.addObject("data", data);
		mv.setViewName(jsp);
		return mv;
	}
	
	@RequestMapping(value = "/discharge", method = RequestMethod.GET)
	public ModelAndView discharge(HttpServletRequest request, HttpServletResponse response) {
		Map<String, Object> map = new HashMap<String, Object>();
		String jsp = "discharge";
		String id = request.getParameter("id");
		String payload = "{\"id\":" + id + "}";
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "admissionAndDischarge");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
	    //String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/admissionAndDischarge",requestHeaders, payload);
		ModelAndView mv = new ModelAndView();
		mv.addObject("data", data);
		mv.setViewName(jsp);
		return mv;
	}

	@RequestMapping(value = "/savePatientAdmission", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
	public String savePatientAdmission(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "savePatientAdmission");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		//String data =RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/savePatientAdmission", requestHeaders, payload);
		return data;
	}

	@RequestMapping(value = "/newAdmission", method = RequestMethod.GET)
	public ModelAndView newAdmission(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mv = new ModelAndView();
		String jsp = "newAdmission";
		mv.setViewName(jsp);
		return mv;
	}

	@RequestMapping(value = "/getServiceWisePatientList", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
	public String getServiceWisePatientList(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "getServiceWisePatientList");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/getServiceWisePatientList", requestHeaders, payload);
		return data;
	}

	@RequestMapping(value = "/saveNewAdmission", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
	public String saveNewAdmission(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "saveNewAdmission");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
	    //String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/saveNewAdmission", requestHeaders, payload);
		return data;
	}

	@RequestMapping(value = "/nursingCareWaitingJSP", method = RequestMethod.GET)
	public ModelAndView nursingCareWaitingJSP(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mv = new ModelAndView();
		String jsp = "nursingCareWaitingJSP";
		mv.setViewName(jsp);
		return mv;
	}

	@RequestMapping(value = "/nursingCareWaitingList", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
	public String nursingCareWaitingList(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/nursingCareWaitingList", requestHeaders, payload);
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "nursingCareWaitingList");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		return data;
	}

	@RequestMapping(value = "/nursingCareDetail", method = RequestMethod.GET)
	public ModelAndView nursingCareDetail(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mv = new ModelAndView();
		String jsp = "nursingCareDetail";
		String id = request.getParameter("header_id");
		String payload = "{\"header_id\":" + id + "}";
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/getNursingCareDetail", requestHeaders, payload);
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "getNursingCareDetail");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		mv.addObject("data", data);
		mv.setViewName(jsp);
		return mv;

	}
	
	@RequestMapping(value = "/getSpecificProcedureDetail", method = RequestMethod.GET)
	public ModelAndView saveProcedureDetail(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mv = new ModelAndView();
		String jsp = "saveProcedureDetail";
		String header_id = request.getParameter("id");
		String payload = "{\"header_id\":" + header_id + "}"; 
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/getProcedureDetail", requestHeaders, payload);
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "getProcedureDetail");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		mv.addObject("data", data);
		mv.setViewName(jsp);
		return mv;
	}
	
	@RequestMapping(value = "/saveProcedureDetail", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
	public String saveProcedureDetail(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/saveProcedureDetail", requestHeaders, payload);
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "saveProcedureDetail");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		return data;
	}
	
	@RequestMapping(value = "/physioTherapyWaitingJSP", method = RequestMethod.GET)
	public ModelAndView physioTherapyWaitingJSP(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mv = new ModelAndView();
		String jsp = "physioTherapyWaitingJSP";
		mv.setViewName(jsp);
		return mv;
	}

	@RequestMapping(value = "/physioTherapyWaitingList", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
	public String physioTherapyWaitingList(@RequestBody String payload, HttpServletRequest request,
			HttpServletResponse response) {
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/physioTherapyWaitingList", requestHeaders, payload);
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "physiotherapyWaitingList");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		return data;
	}
	
	@RequestMapping(value = "/getphysioTherapyDetail", method = RequestMethod.GET)
	public ModelAndView getphysioTherapyDetail(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mv = new ModelAndView();
		String jsp = "physioTherapyDetail";
		String id = request.getParameter("header_id");
		String payload = "{\"header_id\":" + id + "}";
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/getphysioTherapyDetail", requestHeaders, payload);
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "getphysioTherapyDetail");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		mv.addObject("data", data);
		mv.setViewName(jsp);
		return mv;

	}
	
	@RequestMapping(value = "/getSpecificTherapyDetail", method = RequestMethod.GET)
	public ModelAndView savePhysioDetail(HttpServletRequest request, HttpServletResponse response) {
		ModelAndView mv = new ModelAndView();
		String jsp = "saveTherapyDetail";
		String header_id = request.getParameter("id");
		String payload = "{\"header_id\":" + header_id + "}"; 
		MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
		//String data = RestUtils.postWithHeaders("http://192.168.203.172:8081/AshaServices/v0.1/opd/getProcedureDetail", requestHeaders, payload);
		String OsbURL = HMSUtil.getProperties("urlextension.properties", "getProcedureDetail");
		String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
		mv.addObject("data", data);
		mv.setViewName(jsp);
		return mv;
	}
	
	// Added by Avinash OPD Patient recalll
			@RequestMapping(value = "/opdPatientRecall", method = RequestMethod.GET)
			public ModelAndView opdPatientRecall(HttpServletRequest request, HttpServletResponse response) {
				System.out.println("Patient Recall called");
				String jsp = "opdRecall";
				ModelAndView mv = new ModelAndView();
				mv.setViewName(jsp);
				return mv;
			}

			@RequestMapping(value = "/getOpdPatientRecalls", method = RequestMethod.POST)
			public String getOpdPatientRecalls(@RequestBody String payload, HttpServletRequest request,
					HttpServletResponse response) {
				return os.getOpdWaitingList(payload, request, response);
			}

			@RequestMapping(value = "/getOpdPatientRecallModel", method = RequestMethod.GET)
			public ModelAndView getOpdPatientRecallModel(HttpServletRequest request, HttpServletResponse response) {
				System.out.println("called");
				Map<String, Object> map = new HashMap<String, Object>();
				String jsp = "opdMainPaitentRecall";
				int visitId = Integer.parseInt(request.getParameter("visitId"));
				String payload = "{\"visitId\":" + visitId + "}";
				String jsonResponse = os.getOpdPatientDetailModel(payload, request, response);
				System.out.println("jsonResponse " + jsonResponse);
				ModelAndView mv = new ModelAndView();
				mv.addObject("data", jsonResponse);
				mv.setViewName(jsp);
				return mv;
			}

			@RequestMapping(value = "/getExaminationDetail", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
			public String getExaminationDetail(@RequestBody String payload, HttpServletRequest request,
					HttpServletResponse response) {
			
			/*  MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,
			  String>(); String Url = HMSUtil.getProperties("urlextension.properties","GetExaminationDetail");
			  String OSBURL = ipAndPort + Url; 
			  String data=RestUtils.postWithHeaders(OSBURL.trim(), requestHeaders, payload);*/
			 
				
			
			  /*MultiValueMap<String, String> requestHeaders = new
			 LinkedMultiValueMap<String, String>(); String data =
			 RestUtils.postWithHeaders(
			 "http://localhost:8082/AshaServices/v0.1/opd/getExaminationDetail",
			  requestHeaders, payload);*/
				String data=os.getExaminationDetail(payload, request, response);
				return data;
			}

			@RequestMapping(value = "/getInvestigationDetail", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
			public String getInvestigationDetail(@RequestBody String payload, HttpServletRequest request,
					HttpServletResponse response) {
				
			
			/* MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,
			 String>(); String Url = HMSUtil.getProperties("urlextension.properties",
			 "GetInvestigationDetail"); String OSBURL = ipAndPort + Url;
			 String data=RestUtils.postWithHeaders(OSBURL.trim(), requestHeaders, payload);*/
			 
			 
			 /* MultiValueMap<String, String> requestHeaders = new
			  LinkedMultiValueMap<String, String>(); String data =
			 RestUtils.postWithHeaders(
			  "http://localhost:8082/AshaServices/v0.1/opd/getInvestigationDetail",
			  requestHeaders, payload);*/
			 
				
				String data=os.getInvestigationDetail(payload, request, response);
				return data;
			}

			@RequestMapping(value = "/getTreatmentPatientDetail", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
			public String getTreatmentPatientDetail(@RequestBody String payload, HttpServletRequest request,
					HttpServletResponse response) {
			
			/* MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,
			  String>(); String Url = HMSUtil.getProperties("urlextension.properties","GetTreatmentPatientDetail"); 
			  String OSBURL = ipAndPort + Url; 
			  String data=RestUtils.postWithHeaders(OSBURL.trim(), requestHeaders, payload);*/
			
				
			
			  /*MultiValueMap<String, String> requestHeaders = new
			  LinkedMultiValueMap<String, String>(); String data =
			  RestUtils.postWithHeaders(
			  "http://localhost:8082/AshaServices/v0.1/opd/getTreatmentPatientDetail",
			  requestHeaders, payload);*/
			
				String data=os.getTreatmentPatientDetail(payload, request, response);
				
				return data;
			}

			@RequestMapping(value = "/getPatientHistoryDetail", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
			public String getPatientHistoryDetail(@RequestBody String payload, HttpServletRequest request,
					HttpServletResponse response) {
			
			  /*MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,
			  String>(); String Url = HMSUtil.getProperties("urlextension.properties","GetPatientHistoryDetail"); 
			  String OSBURL = ipAndPort + Url;
			  String data=RestUtils.postWithHeaders(OSBURL.trim(), requestHeaders, payload);*/
			
			
			 /* MultiValueMap<String, String> requestHeaders = new
			  LinkedMultiValueMap<String, String>(); String data =
			 RestUtils.postWithHeaders(
			  "http://localhost:8082/AshaServices/v0.1/opd/getPatientHistoryDetail",
			  requestHeaders, payload);*/
				String data=os.getPatientHistoryDetail(payload, request, response);
				return data;
			}

			@RequestMapping(value = "/getPatientReferalDetail", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
			public String getPatientReferalDetail(@RequestBody String payload, HttpServletRequest request,
					HttpServletResponse response) {
			
			/*  MultiValueMap<String,String> requestHeaders = new LinkedMultiValueMap<String,String>(); 
			  String Url = HMSUtil.getProperties("urlextension.properties","GetPatientReferalDetail");
			  String OSBURL = ipAndPort + Url;
			  String data= RestUtils.postWithHeaders(OSBURL.trim(), requestHeaders, payload);*/
			
			
			  /*MultiValueMap<String, String> requestHeaders = new
			  LinkedMultiValueMap<String, String>(); String data =
			  RestUtils.postWithHeaders(
			  "http://localhost:8082/AshaServices/v0.1/opd/getPatientReferalDetail",
			  requestHeaders, payload);*/
				
				String data=os.getPatientReferalDetail(payload, request, response);
				return data;
				//return RestUtils.postWithHeaders(data, requestHeaders, payload);
			}

	@RequestMapping(value = "/deleteGridRow", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
	public String deleteGridRow(@RequestBody String payload, HttpServletRequest request, HttpServletResponse response) {
		
	/*  MultiValueMap<String, String> requestHeaders = new
	  LinkedMultiValueMap<String, String>(); */
	 // String data =RestUtils.postWithHeaders("http://localhost:8082/AshaServices/v0.1/opd/deleteGridRow", requestHeaders,payload);
	  String data =os.deleteGridRow(payload, request, response);
		return data;
	
	/*
	 * MultiValueMap<String,String> requestHeaders = new
	 * LinkedMultiValueMap<String,String>(); String Url =
	 * HMSUtil.getProperties("urlextension.properties", "DeleteGridRow"); String
	 * OSBURL = ipAndPort + Url;
	 * 
	 * return RestUtils.postWithHeaders(OSBURL, requestHeaders, payload);
	 */
		
	}

			@RequestMapping(value = "/submitPatientRecall", method = RequestMethod.POST)
			public ModelAndView updatAndInsertPatientRecall(HttpServletRequest request, HttpServletResponse response) {
				Box box = HMSUtil.getBox(request);
				JSONObject obj = new JSONObject(box);
	            
				
				//MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();
				  String Url = HMSUtil.getProperties("urlextension.properties","submitPatientRecall");
				  String OSBURL = ipAndPort + Url;
				  String data =  os.updatAndInsertPatientRecall(obj.toString(), request, response);
				//String data = RestUtils.postWithHeaders("http://localhost:8082/AshaServices/v0.1/opd/submitPatientRecall",requestHeaders, obj.toString());
				OSBURL=data;
				ModelAndView mv = new ModelAndView();
				String jsp = "opdSubmit";
				mv.addObject("data",data);
				mv.addObject("msgRecall", "Patient Recall Succcessfully submitted.");
				mv.setViewName(jsp);
				return mv;

			}
			
			// end by Avinash OPD Patient recalll
			
			///start by dhiraj //////////
			
			@RequestMapping(value = "/minorSurgeryWaitingJSP", method = RequestMethod.GET)
			public ModelAndView minorSurgeryWaitingJSP(HttpServletRequest request, HttpServletResponse response) {
				ModelAndView mv = new ModelAndView();
				String jsp = "minorSurgeryWaitingJSP";
				mv.setViewName(jsp);
				return mv;
			}
			
			@RequestMapping(value = "/minorSurgeryWaitingList", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
			public String minorSurgeryWaitingList(@RequestBody String payload, HttpServletRequest request,
					HttpServletResponse response) {
				MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();				
				String OsbURL = HMSUtil.getProperties("urlextension.properties", "minorSurgeryWaitingList");
				String data = RestUtils.postWithHeaders(ipAndPort.trim()+OsbURL.trim(), requestHeaders, payload);
				return data;
			}
			
			@RequestMapping(value = "/minorSurgeryDetail", method = RequestMethod.GET)
			public ModelAndView minorSurgeryDetail(HttpServletRequest request, HttpServletResponse response) {
				ModelAndView mv = new ModelAndView();
				String jsp = "minorSurgeryDetail";
				String id = request.getParameter("header_id");
				String payload = "{\"header_id\":" + id + "}";
				MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();				
				String OsbURL = HMSUtil.getProperties("urlextension.properties", "getMinorSurgeryDetail");
				String data = RestUtils.postWithHeaders(ipAndPort.trim() + OsbURL.trim(), requestHeaders, payload);
				mv.addObject("data", data);
				mv.setViewName(jsp);
				return mv;

			}
			
			@RequestMapping(value = "/getAnesthesiaList", method = RequestMethod.POST, produces = "application/json", consumes = "application/json")
			public String getAnesthesiaList(@RequestBody String payload, HttpServletRequest request,
					HttpServletResponse response) {
				MultiValueMap<String, String> requestHeaders = new LinkedMultiValueMap<String, String>();				
				String OsbURL = HMSUtil.getProperties("urlextension.properties", "getAnesthesiaList");
				String data = RestUtils.postWithHeaders(ipAndPort.trim()+OsbURL.trim(), requestHeaders, payload);
				return data;
			}
			
			
	}
	
